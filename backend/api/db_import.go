package api

import (
	"encoding/json"
	"io"
	"net/http"

	"model-manager/backend/database"
	"model-manager/backend/models"

	"github.com/gin-gonic/gin"
)

// ImportDatabase handles importing a JSON dump previously
// generated by the export endpoint.
func ImportDatabase(c *gin.Context) {
	file, _, err := c.Request.FormFile("file")
	if err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": "file required"})
		return
	}
	defer file.Close()

	data, err := io.ReadAll(file)
	if err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": "failed to read file"})
		return
	}

	var modelsList []models.Model
	if err := json.Unmarshal(data, &modelsList); err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": "invalid json"})
		return
	}

	for _, m := range modelsList {
		// reset IDs so new ones are assigned
		m.ID = 0
		for vi := range m.Versions {
			m.Versions[vi].ID = 0
			m.Versions[vi].ModelID = 0
			for ii := range m.Versions[vi].Images {
				m.Versions[vi].Images[ii].ID = 0
				m.Versions[vi].Images[ii].VersionID = 0
			}
		}
		database.DB.Create(&m)
	}

	c.JSON(http.StatusOK, gin.H{"message": "database import complete"})
}
